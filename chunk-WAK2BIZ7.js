import{b as C}from"./chunk-Q6FLGWCJ.js";import{a as h}from"./chunk-HKUNN5OK.js";import{C as f,P as v,f as m,ma as y,pa as k,qa as L,ua as O}from"./chunk-6FL7R2MJ.js";import"./chunk-EQDQRRRY.js";var E=0;function P(r,t,i,n,o,e){O(r,i,n),r.strokeStyle=y(o,e),r.lineWidth=t,r.stroke()}function w(r,t,i,n,o){r.canvas.draw(e=>{let s=t.getPosition();P(e,t.retina.linksWidth??E,s,o,i,n)})}var q="grab",x=0,G=0,D=class extends h{constructor(t){super(t)}clear(){}init(){let t=this.container,i=t.actualOptions.interactivity.modes.grab;i&&(t.retina.grabModeDistance=i.distance*t.retina.pixelRatio)}interact(){let t=this.container,i=t.actualOptions,n=i.interactivity;if(!n.modes.grab||!n.events.onHover.enable||t.interactivity.status!==m)return;let o=t.interactivity.mouse.position;if(!o)return;let e=t.retina.grabModeDistance;if(!e||e<x)return;let s=t.particles.quadTree.queryCircle(o,e,a=>this.isEnabled(a));for(let a of s){let M=a.getPosition(),c=f(M,o);if(c>e)continue;let l=n.modes.grab.links,d=l.opacity,p=d-c*d/e;if(p<=G)continue;let u=l.color??a.options.links?.color;if(!t.particles.grabLineColor&&u){let g=n.modes.grab.links;t.particles.grabLineColor=L(u,g.blink,g.consent)}let b=k(a,void 0,t.particles.grabLineColor);b&&w(t,a,b,p,o)}}isEnabled(t){let i=this.container,n=i.interactivity.mouse,o=(t?.interactivity??i.actualOptions.interactivity).events;return o.onHover.enable&&!!n.position&&v(q,o.onHover.mode)}loadModeOptions(t,...i){t.grab||(t.grab=new C);for(let n of i)t.grab.load(n?.grab)}reset(){}};export{D as Grabber};
