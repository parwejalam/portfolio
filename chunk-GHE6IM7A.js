import{a as l}from"./chunk-7TRVJS3N.js";import"./chunk-HKUNN5OK.js";import{B as P,C as c,G as z,H as O,T as R,ha as x,ma as w,s as a,v as g,y}from"./chunk-6FL7R2MJ.js";import"./chunk-EQDQRRRY.js";var V=2,A=.033,N=0,q=0,C=0,p={x:0,y:0},E=0,I=2,F=Math.PI*I,v=0,D=class{constructor(s,o,r,d){this.absorbers=s,this.container=o,this._calcPosition=()=>{let i=O({size:this.container.canvas.size,position:this.options.position});return a.create(i.x,i.y)},this._updateParticlePosition=(i,h)=>{if(i.destroyed)return;let n=this.container,t=n.canvas.size;if(i.needsNewPosition){let e=z({size:t});i.position.setTo(e),i.velocity.setTo(i.initialVelocity),i.absorberOrbit=void 0,i.needsNewPosition=!1}if(this.options.orbits){if(i.absorberOrbit===void 0&&(i.absorberOrbit=a.origin,i.absorberOrbit.length=c(i.getPosition(),this.position),i.absorberOrbit.angle=g()*F),i.absorberOrbit.length<=this.size&&!this.options.destroy){let M=Math.min(t.width,t.height),S=1,_=.1,k=.2;i.absorberOrbit.length=M*(S+(g()*k-_))}i.absorberOrbitDirection===void 0&&(i.absorberOrbitDirection=i.velocity.x>=v?"clockwise":"counter-clockwise");let e=i.absorberOrbit.length,m=i.absorberOrbit.angle,u=i.absorberOrbitDirection;i.velocity.setTo(a.origin);let f={x:u==="clockwise"?Math.cos:Math.sin,y:u==="clockwise"?Math.sin:Math.cos};i.position.x=this.position.x+e*f.x(m),i.position.y=this.position.y+e*f.y(m),i.absorberOrbit.length-=h.length,i.absorberOrbit.angle+=(i.retina.moveSpeed??v)*n.retina.pixelRatio/100*n.retina.reduceFactor}else{let e=a.origin;e.length=h.length,e.angle=h.angle,i.velocity.addTo(e)}},this.initialPosition=d?a.create(d.x,d.y):void 0,r instanceof l?this.options=r:(this.options=new l,this.options.load(r)),this.dragging=!1,this.name=this.options.name,this.opacity=this.options.opacity,this.size=y(this.options.size.value)*o.retina.pixelRatio,this.mass=this.size*this.options.size.density*o.retina.reduceFactor;let b=this.options.size.limit;this.limit={radius:b.radius*o.retina.pixelRatio*o.retina.reduceFactor,mass:b.mass},this.color=x(this.options.color)??{b:0,g:0,r:0},this.position=this.initialPosition?.copy()??this._calcPosition()}attract(s){let o=this.container,r=this.options;if(r.draggable){let t=o.interactivity.mouse;t.clicking&&t.downPosition?c(this.position,t.downPosition)<=this.size&&(this.dragging=!0):this.dragging=!1,this.dragging&&t.position&&(this.position.x=t.position.x,this.position.y=t.position.y)}let d=s.getPosition(),{dx:b,dy:i,distance:h}=P(this.position,d),n=a.create(b,i);if(n.length=this.mass/Math.pow(h,V)*o.retina.reduceFactor,h<this.size+s.getRadius()){let t=s.getRadius()*A*o.retina.pixelRatio;this.size>s.getRadius()&&h<this.size-s.getRadius()||s.absorberOrbit!==void 0&&s.absorberOrbit.length<N?r.destroy?s.destroy():(s.needsNewPosition=!0,this._updateParticlePosition(s,n)):(r.destroy&&(s.size.value-=t),this._updateParticlePosition(s,n)),(this.limit.radius<=q||this.size<this.limit.radius)&&(this.size+=t),(this.limit.mass<=C||this.mass<this.limit.mass)&&(this.mass+=t*this.options.size.density*o.retina.reduceFactor)}else this._updateParticlePosition(s,n)}draw(s){s.translate(this.position.x,this.position.y),s.beginPath(),s.arc(p.x,p.y,this.size,E,F,!1),s.closePath(),s.fillStyle=w(this.color,this.opacity),s.fill()}resize(){let s=this.initialPosition;this.position=s&&R(s,this.container.canvas.size,a.origin)?s:this._calcPosition()}};export{D as AbsorberInstance};
